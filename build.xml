<project name="css4swing" default="run-sample">
   <description>build file</description>
   
   <property file="build.properties" />
   
   <path id="class.path">
      <fileset dir="${lib.src.dir}" includes="*.jar" />
   </path>

   <path id="runtime.classpath">
      <fileset dir="${lib.runtime.dir}" includes="*.jar" />
      <pathelement location="${build.classes.dir}" />
   </path>
   
   <path id="test.classpath">
      <path refid="runtime.classpath" />
      <fileset dir="${lib.test.dir}" includes="*.jar" />
   </path>
   
   <target name="init">
      <tstamp />
      <mkdir dir="${gen.dir}/${package}" />
      <mkdir dir="${build.classes.dir}" />
      <mkdir dir="${dist.dir}" />
   </target>
   
   <target name="clean" description="delete all generated artifacts">
      <delete dir="${build.dir}" />
      <delete dir="${dist.dir}" />
   </target>
   

   <target name="gen" depends="init" description="antlr gen">
      <java classpathref="class.path"
            classname="org.antlr.Tool" fork="true">
         <arg line="-o ${gen.dir}/${package} -lib ${gen.dir}/${package} CSS.g" />
      </java>
   </target>
   
   <target name="compile" depends="gen" description="antlr compile">
      <javac debug="on" deprecation="on"
             listfiles="false"
             destdir="${build.classes.dir}"
             target="1.5"
             classpathref="class.path">
         <src path="${src.dir}" />
         <src path="${gen.dir}" />
      </javac>
      <copy todir="${build.classes.dir}">
        <fileset dir="resources" includes="defaults.css" />
      </copy>
   </target>
   
   <target name="jar" depends="compile" description="produce jar">
      <jar basedir="${build.classes.dir}" file="${dist.dir}/${jar.name}" />
   </target>
   
   <target name="embedded-jar" depends="compile" description="produce jar with embedded antlr">
	  <taskdef name="jarjar" 
			classname="com.tonicsystems.jarjar.JarJarTask"
	        classpath="${lib.jarjar}"/>

      <jarjar basedir="${build.classes.dir}" file="${dist.dir}/${jar.name}" >
			<zipfileset src="${lib.antlr}"/>
            <rule pattern="org.antlr.**" result="${jarjar.name}antlr.@1"/>
	  </jarjar>
   </target>

   <target name="make-binary-dist" depends="clean, jar" description="produce a binary distribution">
      <zip destfile="${dist.dir}/css4swing-${DSTAMP}.zip">
        <fileset dir="${dist.dir}" includes="${jar.name}" />
        <fileset dir="${lib.runtime.dir}" includes="*.jar" />
        <fileset dir="info" includes="README" />
      </zip>
   </target>
   
   <target name="compile-tests" depends="compile" description="antlr compile tests">
      <javac debug="on" deprecation="on"
             listfiles="false"
             destdir="${build.classes.dir}"
             classpathref="test.classpath">
         <src path="${tests.dir}" />
      </javac>
      <antcall target="copytestresources" />
   </target>

   <target name="copytestresources">
       <copy todir="${build.classes.dir}">
         <fileset dir="resources" includes="*.css,*.gif,*.png,*.jpg" />
       </copy>
   </target>

   <target name="run-test" depends="compile-tests" description="run test">
      <java classname="com.u2d.css4swing.Test"
            classpathref="test.classpath"
            fork="true" />
   </target>
   <target name="run" depends="compile-tests" description="run some class of your choosing (pass in -Dclass.name=..)">
      <java classname="${class.name}"
            classpathref="test.classpath"
            fork="true" />
   </target>
   <target name="rundemo">
       <antcall target="run">
           <param name="class.name" value="com.u2d.css4swing.demo.${demo.name}" />
       </antcall>
   </target>
   
   <target name="run-sample" description="run sample test gui">
       <antcall target="rundemo">
           <param name="demo.name" value="SampleTest" />
       </antcall>
   </target>
   <target name="run-sample2" description="run sample2 test gui">
       <antcall target="rundemo">
           <param name="demo.name" value="SampleTest2" />
       </antcall>
   </target>

</project>
